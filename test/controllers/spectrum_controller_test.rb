require 'test_helper'
require 'MzXML'

class SpectrumControllerTest < ActionController::TestCase

  test 'load 32-bit simple spectrum' do
    data = 'eJwt0GtIk1EYwHGRGUZuE4nUVwsqkvqkEV4QxHjP+6xBhYEMyhUz+1KRiXeopuGXmvNaoCV0o0GkRSxLrMBNWuVet0ZzXsALyxeyrYvioDE/VMfn2fny4w/POZxzRJuSAXOLw6JNOZfAl+h5/J20XYCPg4XcFWx/vkwWnAC5K5s7iR1evkUqeeAuN3AnsKOhBTJ8E2ZKa8Toj0PYsTd0fuxtH/gPpoixd4c3myWEsuI2gc87yvVip2n1cUfg/TMtS0vdj727QiGNVTBlDXN/Y4NdJl82g78+xGA4B/v4kfOkfhcENNXcALbhVWpcP3gP2JnhdT+2ydJAtkvw+XQtM1npfhZLK9muhunSDe497J49feTeXJAHKrge7PvJ3eTWEljL+cX9if0oVE6Gk8FtNXKd2EOX1snqUZh63sKGLl/HdnTQfzg6R8DXdpc5uh5gj5uNZIsevrz4xsZb87FdY09IxwB8Cg4yl7MXWw42kl/rYWKsjsnLV7FXtwfJHftg3utkq+kXsSM9T8neKMzeUFjk9tHNlhJNLrLSDIEt3LMF2KqMh2TmGVi6Mi+phExszd+suGu6pKIPkuYf7RfUNC9oOsHXUCwJ2mvY4F4nJ4/pVPaIBB58j1Qm3CGzt+kS1X+ksp1mbOvJdPJUEaz0G/4DjDfiFQ=='
    s = MzXML::Spectrum.new(data: data, precision: 32, compressionType: 'zlib', byteOrder:'network')
    assert s.points.length == 91
  end

  test 'load 64-bit complex spectrum' do
    mz = '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'
    int = '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'
    s  = MzXML::Spectrum.new(m_z: mz, int: int, precision: 64, compressionType: 'zlib', byteOrder:'network')
    assert s.points.length == 2126
  end

  test 'read simple spectrum from xml' do
    sample_spectrum = '
    <scan num="1"
          scanType="Full"
          centroided="1"
          msLevel="1"
          peaksCount="91"
          polarity="+"
          retentionTime="PT0.0928959S"
          lowMz="79.203698366038"
          highMz="1212.112079406857"
          basePeakMz="571.9832978"
          basePeakIntensity="8527.362300000001"
          totIonCurrent="2.1566725e05">
      <peaks compressionType="zlib"
             compressedLen="502"
             precision="32"
             byteOrder="network"
             contentType="m/z-int">eJwt0GtIk1EYwHGRGUZuE4nUVwsqkvqkEV4QxHjP+6xBhYEMyhUz+1KRiXeopuGXmvNaoCV0o0GkRSxLrMBNWuVet0ZzXsALyxeyrYvioDE/VMfn2fny4w/POZxzRJuSAXOLw6JNOZfAl+h5/J20XYCPg4XcFWx/vkwWnAC5K5s7iR1evkUqeeAuN3AnsKOhBTJ8E2ZKa8Toj0PYsTd0fuxtH/gPpoixd4c3myWEsuI2gc87yvVip2n1cUfg/TMtS0vdj727QiGNVTBlDXN/Y4NdJl82g78+xGA4B/v4kfOkfhcENNXcALbhVWpcP3gP2JnhdT+2ydJAtkvw+XQtM1npfhZLK9muhunSDe497J49feTeXJAHKrge7PvJ3eTWEljL+cX9if0oVE6Gk8FtNXKd2EOX1snqUZh63sKGLl/HdnTQfzg6R8DXdpc5uh5gj5uNZIsevrz4xsZb87FdY09IxwB8Cg4yl7MXWw42kl/rYWKsjsnLV7FXtwfJHftg3utkq+kXsSM9T8neKMzeUFjk9tHNlhJNLrLSDIEt3LMF2KqMh2TmGVi6Mi+phExszd+suGu6pKIPkuYf7RfUNC9oOsHXUCwJ2mvY4F4nJ4/pVPaIBB58j1Qm3CGzt+kS1X+ksp1mbOvJdPJUEaz0G/4DjDfiFQ==</peaks>
    </scan>'
    s = MzXML::Spectrum.fromXML sample_spectrum
    assert_not s.nil?, 'no spectrum detected'
    assert s.points.length == 91, 'recorded %i points, should be 91'%s.points.length
    assert s.msLevel == 1, 'no ms level detected'
    assert s.retentionTime==0.0928959, 'wrong retention time detected, was %f, should be 0.0928959'%s.retentionTime
  end

  test 'read complex spectrum from xml' do
    sample_spectrum = '
<spectrum index="1" id="controllerType=0 controllerNumber=1 scan=2" defaultArrayLength="2126">
  <cvParam cvRef="MS" accession="MS:1000579" name="MS1 spectrum" value=""/>
  <cvParam cvRef="MS" accession="MS:1000511" name="ms level" value="1"/>
  <cvParam cvRef="MS" accession="MS:1000130" name="positive scan" value=""/>
  <cvParam cvRef="MS" accession="MS:1000127" name="centroid spectrum" value=""/>
  <cvParam cvRef="MS" accession="MS:1000504" name="base peak m/z" value="149.0234791" unitCvRef="MS" unitAccession="MS:1000040" unitName="m/z"/>
  <cvParam cvRef="MS" accession="MS:1000505" name="base peak intensity" value="1.0346505e07" unitCvRef="MS" unitAccession="MS:1000131" unitName="number of detector counts"/>
  <cvParam cvRef="MS" accession="MS:1000285" name="total ion current" value="9.070816e07"/>
  <cvParam cvRef="MS" accession="MS:1000528" name="lowest observed m/z" value="80.058074951172" unitCvRef="MS" unitAccession="MS:1000040" unitName="m/z"/>
  <cvParam cvRef="MS" accession="MS:1000527" name="highest observed m/z" value="1178.022216796875" unitCvRef="MS" unitAccession="MS:1000040" unitName="m/z"/>
  <cvParam cvRef="MS" accession="MS:1000796" name="spectrum title" value="20141105_01_3A.2.2. File:&quot;20141105_01_3A.raw&quot;, NativeID:&quot;controllerType=0 controllerNumber=1 scan=2&quot;"/>
  <scanList count="1">
    <cvParam cvRef="MS" accession="MS:1000795" name="no combination" value=""/>
    <scan>
      <cvParam cvRef="MS" accession="MS:1000016" name="scan start time" value="0.011802449" unitCvRef="UO" unitAccession="UO:0000031" unitName="minute"/>
      <cvParam cvRef="MS" accession="MS:1000512" name="filter string" value="FTMS + p NSI Full lock ms [80.00-1200.00]"/>
      <cvParam cvRef="MS" accession="MS:1000616" name="preset scan configuration" value="1"/>
      <cvParam cvRef="MS" accession="MS:1000927" name="ion injection time" value="200.000002980232" unitCvRef="UO" unitAccession="UO:0000028" unitName="millisecond"/>
      <scanWindowList count="1">
        <scanWindow>
          <cvParam cvRef="MS" accession="MS:1000501" name="scan window lower limit" value="80.0" unitCvRef="MS" unitAccession="MS:1000040" unitName="m/z"/>
          <cvParam cvRef="MS" accession="MS:1000500" name="scan window upper limit" value="1200.0" unitCvRef="MS" unitAccession="MS:1000040" unitName="m/z"/>
        </scanWindow>
      </scanWindowList>
    </scan>
  </scanList>
  <binaryDataArrayList count="2">
    <binaryDataArray encodedLength="8768">
      <cvParam cvRef="MS" accession="MS:1000523" name="64-bit float" value=""/>
      <cvParam cvRef="MS" accession="MS:1000574" name="zlib compression" value=""/>
      <cvParam cvRef="MS" accession="MS:1000514" name="m/z array" value="" unitCvRef="MS" unitAccession="MS:1000040" unitName="m/z"/>
      <binary></binary>
    </binaryDataArray>
    <binaryDataArray encodedLength="12580">
      <cvParam cvRef="MS" accession="MS:1000523" name="64-bit float" value=""/>
      <cvParam cvRef="MS" accession="MS:1000574" name="zlib compression" value=""/>
      <cvParam cvRef="MS" accession="MS:1000515" name="intensity array" value="" unitCvRef="MS" unitAccession="MS:1000131" unitName="number of detector counts"/>
      <binary></binary>
    </binaryDataArray>
  </binaryDataArrayList>
</spectrum>'
    s = MzXML::Spectrum.fromXML sample_spectrum
    assert_not s.nil?, 'no spectrum acquired'
    assert s.points.length == 2126, 'only found %i points, should be 2126'%s.points.length
    assert s.msLevel==1, 'ms-level not recorded'
    assert s.retentionTime==0.011802449, 'wrong retention time recorded, was %s, should be 0.011802449'%s.retentionTime
    assert s.precursorMass.nil?, 'parental mass set for ms1-spectrum'
  end

  test 'ms2 spectrum import' do
    data = '<spectrum index="3" id="controllerType=0 controllerNumber=1 scan=4" defaultArrayLength="8">
          <cvParam cvRef="MS" accession="MS:1000580" name="MSn spectrum" value=""/>
          <cvParam cvRef="MS" accession="MS:1000511" name="ms level" value="2"/>
          <cvParam cvRef="MS" accession="MS:1000130" name="positive scan" value=""/>
          <cvParam cvRef="MS" accession="MS:1000127" name="centroid spectrum" value=""/>
          <cvParam cvRef="MS" accession="MS:1000504" name="base peak m/z" value="137.0122683" unitCvRef="MS" unitAccession="MS:1000040" unitName="m/z"/>
          <cvParam cvRef="MS" accession="MS:1000505" name="base peak intensity" value="7543.0171" unitCvRef="MS" unitAccession="MS:1000131" unitName="number of detector counts"/>
          <cvParam cvRef="MS" accession="MS:1000285" name="total ion current" value="51247.555"/>
          <cvParam cvRef="MS" accession="MS:1000528" name="lowest observed m/z" value="52.35958480835" unitCvRef="MS" unitAccession="MS:1000040" unitName="m/z"/>
          <cvParam cvRef="MS" accession="MS:1000527" name="highest observed m/z" value="159.690124511719" unitCvRef="MS" unitAccession="MS:1000040" unitName="m/z"/>
          <cvParam cvRef="MS" accession="MS:1000796" name="spectrum title" value="20141105_01_3A.4.4.1 File:&quot;20141105_01_3A.raw&quot;, NativeID:&quot;controllerType=0 controllerNumber=1 scan=4&quot;"/>
          <scanList count="1">
            <cvParam cvRef="MS" accession="MS:1000795" name="no combination" value=""/>
            <scan>
              <cvParam cvRef="MS" accession="MS:1000016" name="scan start time" value="0.020768999" unitCvRef="UO" unitAccession="UO:0000031" unitName="minute"/>
              <cvParam cvRef="MS" accession="MS:1000512" name="filter string" value="FTMS + p NSI d Full ms2 149.02@hcd22.50 [50.00-170.00]"/>
              <cvParam cvRef="MS" accession="MS:1000616" name="preset scan configuration" value="2"/>
              <cvParam cvRef="MS" accession="MS:1000927" name="ion injection time" value="22.152118384838" unitCvRef="UO" unitAccession="UO:0000028" unitName="millisecond"/>
              <userParam name="[Thermo Trailer Extra]Monoisotopic M/Z:" value="149.023479126095" type="xsd:float"/>
              <scanWindowList count="1">
                <scanWindow>
                  <cvParam cvRef="MS" accession="MS:1000501" name="scan window lower limit" value="50.0" unitCvRef="MS" unitAccession="MS:1000040" unitName="m/z"/>
                  <cvParam cvRef="MS" accession="MS:1000500" name="scan window upper limit" value="170.0" unitCvRef="MS" unitAccession="MS:1000040" unitName="m/z"/>
                </scanWindow>
              </scanWindowList>
            </scan>
          </scanList>
          <precursorList count="1">
            <precursor spectrumRef="controllerType=0 controllerNumber=1 scan=3">
              <isolationWindow>
                <cvParam cvRef="MS" accession="MS:1000827" name="isolation window target m/z" value="149.02" unitCvRef="MS" unitAccession="MS:1000040" unitName="m/z"/>
                <cvParam cvRef="MS" accession="MS:1000828" name="isolation window lower offset" value="0.20000000298" unitCvRef="MS" unitAccession="MS:1000040" unitName="m/z"/>
                <cvParam cvRef="MS" accession="MS:1000829" name="isolation window upper offset" value="0.20000000298" unitCvRef="MS" unitAccession="MS:1000040" unitName="m/z"/>
              </isolationWindow>
              <selectedIonList count="1">
                <selectedIon>
                  <cvParam cvRef="MS" accession="MS:1000744" name="selected ion m/z" value="149.023479126095" unitCvRef="MS" unitAccession="MS:1000040" unitName="m/z"/>
                  <cvParam cvRef="MS" accession="MS:1000041" name="charge state" value="1"/>
                  <cvParam cvRef="MS" accession="MS:1000042" name="peak intensity" value="5.547765e06" unitCvRef="MS" unitAccession="MS:1000131" unitName="number of detector counts"/>
                </selectedIon>
              </selectedIonList>
              <activation>
                <cvParam cvRef="MS" accession="MS:1000422" name="beam-type collision-induced dissociation" value=""/>
                <cvParam cvRef="MS" accession="MS:1000045" name="collision energy" value="22.5" unitCvRef="UO" unitAccession="UO:0000266" unitName="electronvolt"/>
              </activation>
            </precursor>
          </precursorList>
          <binaryDataArrayList count="2">
            <binaryDataArray encodedLength="72">
              <cvParam cvRef="MS" accession="MS:1000523" name="64-bit float" value=""/>
              <cvParam cvRef="MS" accession="MS:1000574" name="zlib compression" value=""/>
              <cvParam cvRef="MS" accession="MS:1000514" name="m/z array" value="" unitCvRef="MS" unitAccession="MS:1000040" unitName="m/z"/>
              <binary>eJxjYGB4wKbn5cAABGf7fEB0Qv4TfxC9oJ8nAEznF4WB6IYUhUSwfL1ZMpgv+i3ZAQDV+Q81</binary>
            </binaryDataArray>
            <binaryDataArray encodedLength="76">
              <cvParam cvRef="MS" accession="MS:1000523" name="64-bit float" value=""/>
              <cvParam cvRef="MS" accession="MS:1000574" name="zlib compression" value=""/>
              <cvParam cvRef="MS" accession="MS:1000515" name="intensity array" value="" unitCvRef="MS" unitAccession="MS:1000131" unitName="number of detector counts"/>
              <binary>eJxjYGBg8K/a7ACkFHoX7ALRDdrbdoDoB42Lt4HoAzbZu0F0Akv5XrD83qc7weLMn7c7AAA2CxNZ</binary>
            </binaryDataArray>
          </binaryDataArrayList>
        </spectrum>'
    s = MzXML::Spectrum.fromXML(data)
    assert_not s.nil?, 'could not import spectrum'
    assert s.precursorMass==149.023479126095, 'precursor mass not recognized correctly, is %f, should be 149.023479126095'%s.precursorMass
    assert s.retentionTime==0.020768999, 'retention time not recognized correctly, is %f, should be 0.020768999'%s.retentionTime
    assert s.points.length==8, 'ms2 spectrum length not correct, is %i, should be 8'%s.points.length
  end


end
